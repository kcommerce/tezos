sc_rollup_commitment_of_rollup_node_messages_reset.out

./tezos-client --wait none originate sc rollup from '[PUBLIC_KEY_HASH]' of kind arith booting with  --burn-cap 9999999
Node is bootstrapped.
Estimated gas: 1600.648 units (will add 100 for safety)
Estimated storage: 6522 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000402
    Expected counter: 1
    Gas limit: 1701
    Storage limit: 6542 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000402
      payload fees(the block proposer) ....... +ꜩ0.000402
    Originate smart contract rollup of kind arith with boot sector ''
      This smart contract rollup origination was successfully applied
      Consumed gas: 1600.648
      Storage size: 6522 bytes
      Address: [SC_ROLLUP_HASH]
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ1.6305
        storage fees ........................... +ꜩ1.6305


./tezos-client rpc get '/chains/main/blocks/head/context/sc_rollup/[SC_ROLLUP_HASH]/initial_level'
2

./tezos-client rpc get /chains/main/blocks/head/context/constants
{ "proof_of_work_nonce_size": 8, "nonce_length": 32,
  "max_anon_ops_per_block": 132, "max_operation_data_length": 32768,
  "max_proposals_per_delegate": 20, "max_micheline_node_count": 50000,
  "max_micheline_bytes_limit": 50000,
  "max_allowed_global_constants_depth": 10000, "cache_layout_size": 3,
  "michelson_maximum_type_size": 2001, "preserved_cycles": 2,
  "blocks_per_cycle": 8, "blocks_per_commitment": 4,
  "blocks_per_stake_snapshot": 4, "cycles_per_voting_period": 8,
  "hard_gas_limit_per_operation": "1040000",
  "hard_gas_limit_per_block": "5200000", "proof_of_work_threshold": "-1",
  "tokens_per_roll": "6000000000", "seed_nonce_revelation_tip": "125000",
  "origination_size": 257, "baking_reward_fixed_portion": "333333",
  "baking_reward_bonus_per_slot": "3921",
  "endorsing_reward_per_slot": "2604", "cost_per_byte": "250",
  "hard_storage_limit_per_operation": "60000", "quorum_min": 2000,
  "quorum_max": 7000, "min_proposal_quorum": 500,
  "liquidity_baking_subsidy": "2500000",
  "liquidity_baking_sunset_level": 128,
  "liquidity_baking_toggle_ema_threshold": 1000000000,
  "max_operations_time_to_live": 120, "minimal_block_delay": "1",
  "delay_increment_per_round": "1", "consensus_committee_size": 256,
  "consensus_threshold": 0,
  "minimal_participation_ratio": { "numerator": 2, "denominator": 3 },
  "max_slashing_period": 2, "frozen_deposits_percentage": 5,
  "double_baking_punishment": "640000000",
  "ratio_of_frozen_deposits_slashed_per_double_endorsement":
    { "numerator": 1, "denominator": 2 }, "cache_script_size": 100000000,
  "cache_stake_distribution_cycles": 8, "cache_sampler_state_cycles": 8,
  "tx_rollup_enable": true, "tx_rollup_origination_size": 4000,
  "tx_rollup_hard_size_limit_per_inbox": 500000,
  "tx_rollup_hard_size_limit_per_message": 5000,
  "tx_rollup_max_withdrawals_per_batch": 15,
  "tx_rollup_commitment_bond": "10000000000",
  "tx_rollup_finality_period": 40000, "tx_rollup_withdraw_period": 40000,
  "tx_rollup_max_inboxes_count": 40100,
  "tx_rollup_max_messages_per_inbox": 1010,
  "tx_rollup_max_commitments_count": 80100,
  "tx_rollup_cost_per_byte_ema_factor": 120,
  "tx_rollup_max_ticket_payload_size": 2048,
  "tx_rollup_rejection_max_proof_size": 30000,
  "tx_rollup_sunset_level": 3473409, "sc_rollup_enable": true,
  "sc_rollup_origination_size": 6314,
  "sc_rollup_challenge_window_in_blocks": 20160,
  "sc_rollup_max_available_messages": 1000000,
  "sc_rollup_stake_amount_in_mutez": 32000000,
  "sc_rollup_commitment_frequency_in_blocks": 30,
  "sc_rollup_commitment_storage_size_in_bytes": 84,
  "sc_rollup_max_lookahead_in_blocks": 30000 }

./tezos-client --wait none send sc rollup message 'text:["CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1651.589 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000457
    Expected counter: 2
    Gas limit: 1752
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000457
      payload fees(the block proposer) ....... +ꜩ0.000457
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1651.717
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 3
         current messages hash  = CoWCiKBE7uyrqCwVM1ZRQEXatHvkqQU9GPf94ktpjasEgkRgKst3
         nb_available_messages = 1
         message_counter = 1
         old_levels_messages = 
       content = CoUkdBQ53N7FWav8LuTvrcp3jyoxnpqk3xnEo3gSCgNwia4fq44j
       index = 1
       back_pointers = CoVawGHT9AxoKnd7hDBCii5PEcM2U3WbtL4L5HGD6PC9BWcLnzqD
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1652.376 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000469
    Expected counter: 3
    Gas limit: 1753
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000469
      payload fees(the block proposer) ....... +ꜩ0.000469
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1652.504
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 4
         current messages hash  = CoV5g92qvZ6GAh1Y44pMkB7B1RQzLyzpDDWMvVJzGFvbGhamRgag
         nb_available_messages = 3
         message_counter = 2
         old_levels_messages = 
       content = CoWCiKBE7uyrqCwVM1ZRQEXatHvkqQU9GPf94ktpjasEgkRgKst3
       index = 2
       back_pointers = CoUmDifn9cHq3g1wRc8ft64oMz7Jha8f4mcUWZd2YRseVae6MQAN
      CoUmDifn9cHq3g1wRc8ft64oMz7Jha8f4mcUWZd2YRseVae6MQAN
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1653.148 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000481
    Expected counter: 4
    Gas limit: 1754
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000481
      payload fees(the block proposer) ....... +ꜩ0.000481
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1653.148
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 5
         current messages hash  = CoUwCB8jyBHvPAUwbmFQN3zVJ8ncrGgx6bpVxpPjzHvuDzmjDNmW
         nb_available_messages = 6
         message_counter = 3
         old_levels_messages = 
       content = CoV5g92qvZ6GAh1Y44pMkB7B1RQzLyzpDDWMvVJzGFvbGhamRgag
       index = 3
       back_pointers = CoUybFZtfeEftCQTTS5AM8bvPtyikzL1HUdACbgxd9BrKNJboubL
      CoUmDifn9cHq3g1wRc8ft64oMz7Jha8f4mcUWZd2YRseVae6MQAN
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1653.713 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000493
    Expected counter: 5
    Gas limit: 1754
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000493
      payload fees(the block proposer) ....... +ꜩ0.000493
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1653.841
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 6
         current messages hash  = CoW1rzZ87zYcazvNhJHqjcLQdKU5sxfKBbEfr2x6yYqWboXmqQ6Y
         nb_available_messages = 10
         message_counter = 4
         old_levels_messages = 
       content = CoUwCB8jyBHvPAUwbmFQN3zVJ8ncrGgx6bpVxpPjzHvuDzmjDNmW
       index = 4
       back_pointers = CoUuVzgWodPAFfiJbh32Hw5MwBQdxo4fqL5NeLBUkfWuWn2NNYg4
      CoUuVzgWodPAFfiJbh32Hw5MwBQdxo4fqL5NeLBUkfWuWn2NNYg4
      CoUuVzgWodPAFfiJbh32Hw5MwBQdxo4fqL5NeLBUkfWuWn2NNYg4
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1654.485 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000505
    Expected counter: 6
    Gas limit: 1755
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000505
      payload fees(the block proposer) ....... +ꜩ0.000505
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1654.485
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 7
         current messages hash  = CoV1yU3Bv7dHwqGQQJ5UHwUrHPQrQcT6rHCEnArna31PpznNktdS
         nb_available_messages = 15
         message_counter = 5
         old_levels_messages = 
       content = CoW1rzZ87zYcazvNhJHqjcLQdKU5sxfKBbEfr2x6yYqWboXmqQ6Y
       index = 5
       back_pointers = CoUuHJY6aHn2xcYEkZw6p5REF5pucf43F9bd7Bf94ja92c1C6L6T
      CoUuVzgWodPAFfiJbh32Hw5MwBQdxo4fqL5NeLBUkfWuWn2NNYg4
      CoUuVzgWodPAFfiJbh32Hw5MwBQdxo4fqL5NeLBUkfWuWn2NNYg4
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1655.050 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000517
    Expected counter: 7
    Gas limit: 1756
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000517
      payload fees(the block proposer) ....... +ꜩ0.000517
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1655.050
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 8
         current messages hash  = CoW1wNosr2Cv2LXpM7RDT6Rrm26rSt2sfUgiE67iHyZZUPdhUPgu
         nb_available_messages = 21
         message_counter = 6
         old_levels_messages = 
       content = CoV1yU3Bv7dHwqGQQJ5UHwUrHPQrQcT6rHCEnArna31PpznNktdS
       index = 6
       back_pointers = CoWEpdWzAJArD6BJnSEXNxv9A9Ck59Yqa45fzWv39RnFyDko5CnC
      CoWEpdWzAJArD6BJnSEXNxv9A9Ck59Yqa45fzWv39RnFyDko5CnC
      CoUuVzgWodPAFfiJbh32Hw5MwBQdxo4fqL5NeLBUkfWuWn2NNYg4
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1655.615 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000529
    Expected counter: 8
    Gas limit: 1756
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000529
      payload fees(the block proposer) ....... +ꜩ0.000529
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1655.615
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 9
         current messages hash  = CoWPdmE2pHruLLyHifwtNAFU3UkuVyWV4ag1xF2ZGKdXF9A5oZ31
         nb_available_messages = 28
         message_counter = 7
         old_levels_messages = 
       content = CoW1wNosr2Cv2LXpM7RDT6Rrm26rSt2sfUgiE67iHyZZUPdhUPgu
       index = 7
       back_pointers = CoWYUEaqJLtQbZMUGX8QJqyJATfmRTTrMrq5s6yetcXL2xdKD8XS
      CoWEpdWzAJArD6BJnSEXNxv9A9Ck59Yqa45fzWv39RnFyDko5CnC
      CoUuVzgWodPAFfiJbh32Hw5MwBQdxo4fqL5NeLBUkfWuWn2NNYg4
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1656.180 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000541
    Expected counter: 9
    Gas limit: 1757
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000541
      payload fees(the block proposer) ....... +ꜩ0.000541
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1656.308
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 10
         current messages hash  = CoWa9W9Xy6UKZqdwPJxxsRYXRBXr9yod6UsczkmxKdS9DLE9BDTg
         nb_available_messages = 36
         message_counter = 8
         old_levels_messages = 
       content = CoWPdmE2pHruLLyHifwtNAFU3UkuVyWV4ag1xF2ZGKdXF9A5oZ31
       index = 8
       back_pointers = CoWSjMYid5Yv62Ba3LHbU2Pvr1VMsfVnV6rhxWNj7SwwwJhbUdpk
      CoWSjMYid5Yv62Ba3LHbU2Pvr1VMsfVnV6rhxWNj7SwwwJhbUdpk
      CoWSjMYid5Yv62Ba3LHbU2Pvr1VMsfVnV6rhxWNj7SwwwJhbUdpk
      CoWSjMYid5Yv62Ba3LHbU2Pvr1VMsfVnV6rhxWNj7SwwwJhbUdpk
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1656.952 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000553
    Expected counter: 10
    Gas limit: 1757
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000553
      payload fees(the block proposer) ....... +ꜩ0.000553
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1656.952
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 11
         current messages hash  = CoVCMjGs1K6zSZf1avuKH8bJD1LjYALaWTeTCSPX3wCcLrWt52J6
         nb_available_messages = 45
         message_counter = 9
         old_levels_messages = 
       content = CoWa9W9Xy6UKZqdwPJxxsRYXRBXr9yod6UsczkmxKdS9DLE9BDTg
       index = 9
       back_pointers = CoVAD6ZY4uQJ1k6CM1x9ti8uZBTQY4ZiureXAhGdrcSB7VzFVmEc
      CoWSjMYid5Yv62Ba3LHbU2Pvr1VMsfVnV6rhxWNj7SwwwJhbUdpk
      CoWSjMYid5Yv62Ba3LHbU2Pvr1VMsfVnV6rhxWNj7SwwwJhbUdpk
      CoWSjMYid5Yv62Ba3LHbU2Pvr1VMsfVnV6rhxWNj7SwwwJhbUdpk
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1657.517 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000565
    Expected counter: 11
    Gas limit: 1758
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000565
      payload fees(the block proposer) ....... +ꜩ0.000565
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1657.517
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 12
         current messages hash  = CoUjjZmHoHC42G5nVapUizgJNgn7MGLGHgFSVC2npyYzuAHpbMtu
         nb_available_messages = 55
         message_counter = 10
         old_levels_messages = 
       content = CoVCMjGs1K6zSZf1avuKH8bJD1LjYALaWTeTCSPX3wCcLrWt52J6
       index = 10
       back_pointers = CoVNwcW6Ttpcn3mTA7nu7hAQCq8D9e6WCf8gxNqAq8bxy9NmbmgT
      CoVNwcW6Ttpcn3mTA7nu7hAQCq8D9e6WCf8gxNqAq8bxy9NmbmgT
      CoWSjMYid5Yv62Ba3LHbU2Pvr1VMsfVnV6rhxWNj7SwwwJhbUdpk
      CoWSjMYid5Yv62Ba3LHbU2Pvr1VMsfVnV6rhxWNj7SwwwJhbUdpk
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1658.082 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000577
    Expected counter: 12
    Gas limit: 1759
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000577
      payload fees(the block proposer) ....... +ꜩ0.000577
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1658.082
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 13
         current messages hash  = CoV34A22GW4hw2JVKiWrtDP71pRg66hNG3TZ64ER2TqXQqwkum7t
         nb_available_messages = 66
         message_counter = 11
         old_levels_messages = 
       content = CoUjjZmHoHC42G5nVapUizgJNgn7MGLGHgFSVC2npyYzuAHpbMtu
       index = 11
       back_pointers = CoWVnYAm9kaAEzrTmr7V6sb7k3VMEaPF3jkDtc7mNj64yUKPDCo9
      CoVNwcW6Ttpcn3mTA7nu7hAQCq8D9e6WCf8gxNqAq8bxy9NmbmgT
      CoWSjMYid5Yv62Ba3LHbU2Pvr1VMsfVnV6rhxWNj7SwwwJhbUdpk
      CoWSjMYid5Yv62Ba3LHbU2Pvr1VMsfVnV6rhxWNj7SwwwJhbUdpk
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1658.647 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000589
    Expected counter: 13
    Gas limit: 1759
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000589
      payload fees(the block proposer) ....... +ꜩ0.000589
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1658.647
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 14
         current messages hash  = CoWGbM6CmBMjJFqPXaXVZvAFx87895PZaWU2Zf4TnmNEkComL9yY
         nb_available_messages = 78
         message_counter = 12
         old_levels_messages = 
       content = CoV34A22GW4hw2JVKiWrtDP71pRg66hNG3TZ64ER2TqXQqwkum7t
       index = 12
       back_pointers = CoV5dfXKwzYtM8MZY6uEjAmHSsbJGNHjbEjNwK6nNxeGVumLpU5s
      CoV5dfXKwzYtM8MZY6uEjAmHSsbJGNHjbEjNwK6nNxeGVumLpU5s
      CoV5dfXKwzYtM8MZY6uEjAmHSsbJGNHjbEjNwK6nNxeGVumLpU5s
      CoWSjMYid5Yv62Ba3LHbU2Pvr1VMsfVnV6rhxWNj7SwwwJhbUdpk
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1659.212 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000601
    Expected counter: 14
    Gas limit: 1760
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000601
      payload fees(the block proposer) ....... +ꜩ0.000601
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1659.212
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 15
         current messages hash  = CoWLWX7w2jYY498ZzHaAGVd4qvzcPDor1tgwoeyjnfX1W4pSZ3TP
         nb_available_messages = 91
         message_counter = 13
         old_levels_messages = 
       content = CoWGbM6CmBMjJFqPXaXVZvAFx87895PZaWU2Zf4TnmNEkComL9yY
       index = 13
       back_pointers = CoW1vyKLr1yxhgj1wZNMibqvHey2PytJ4o1ZcJ8ZZ3XrewN9YD7z
      CoV5dfXKwzYtM8MZY6uEjAmHSsbJGNHjbEjNwK6nNxeGVumLpU5s
      CoV5dfXKwzYtM8MZY6uEjAmHSsbJGNHjbEjNwK6nNxeGVumLpU5s
      CoWSjMYid5Yv62Ba3LHbU2Pvr1VMsfVnV6rhxWNj7SwwwJhbUdpk
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1659.777 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000613
    Expected counter: 15
    Gas limit: 1760
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000613
      payload fees(the block proposer) ....... +ꜩ0.000613
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1659.777
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 16
         current messages hash  = CoW6aNmZx6G5pZjFVmFuV7buMW7ESyMVZ6NeGEfodesCrDrjFMjK
         nb_available_messages = 105
         message_counter = 14
         old_levels_messages = 
       content = CoWLWX7w2jYY498ZzHaAGVd4qvzcPDor1tgwoeyjnfX1W4pSZ3TP
       index = 14
       back_pointers = CoVzQgcgWcuux7wV7FS52KjunuQFMGBTPtV73my4c5aEydW1hbvC
      CoVzQgcgWcuux7wV7FS52KjunuQFMGBTPtV73my4c5aEydW1hbvC
      CoV5dfXKwzYtM8MZY6uEjAmHSsbJGNHjbEjNwK6nNxeGVumLpU5s
      CoWSjMYid5Yv62Ba3LHbU2Pvr1VMsfVnV6rhxWNj7SwwwJhbUdpk
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1660.342 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000626
    Expected counter: 16
    Gas limit: 1761
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000626
      payload fees(the block proposer) ....... +ꜩ0.000626
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1660.342
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 17
         current messages hash  = CoUo1xoKDWmq58cjoFM5Q5mwyHEC6NYXE1LqXBtBG24eNigCStus
         nb_available_messages = 120
         message_counter = 15
         old_levels_messages = 
       content = CoW6aNmZx6G5pZjFVmFuV7buMW7ESyMVZ6NeGEfodesCrDrjFMjK
       index = 15
       back_pointers = CoUsYkJFu7gcZy2dLwVqCGpQBTJGeL8qMGzyiVnLXYyaJrjWgtDV
      CoVzQgcgWcuux7wV7FS52KjunuQFMGBTPtV73my4c5aEydW1hbvC
      CoV5dfXKwzYtM8MZY6uEjAmHSsbJGNHjbEjNwK6nNxeGVumLpU5s
      CoWSjMYid5Yv62Ba3LHbU2Pvr1VMsfVnV6rhxWNj7SwwwJhbUdpk
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1660.907 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000638
    Expected counter: 17
    Gas limit: 1761
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000638
      payload fees(the block proposer) ....... +ꜩ0.000638
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1661.035
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 18
         current messages hash  = CoWUsFt7sWtYHXxMTDUQ3NEqiJMMW6V5Kwo2GxeStwstgfesvDsm
         nb_available_messages = 136
         message_counter = 16
         old_levels_messages = 
       content = CoUo1xoKDWmq58cjoFM5Q5mwyHEC6NYXE1LqXBtBG24eNigCStus
       index = 16
       back_pointers = CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1661.679 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.00065
    Expected counter: 18
    Gas limit: 1762
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.00065
      payload fees(the block proposer) ....... +ꜩ0.00065
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1661.679
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 19
         current messages hash  = CoVrTUpJJMCKybf2XQJq6TShTZ9grEp8214ZFdcJ7BhDRmS7EJzB
         nb_available_messages = 153
         message_counter = 17
         old_levels_messages = 
       content = CoWUsFt7sWtYHXxMTDUQ3NEqiJMMW6V5Kwo2GxeStwstgfesvDsm
       index = 17
       back_pointers = CoUwff6TrVYVha7opCKHDbo3x4VCgtrbWWN6HamTgWGsnxhYsiLV
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1662.244 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000662
    Expected counter: 19
    Gas limit: 1763
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000662
      payload fees(the block proposer) ....... +ꜩ0.000662
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1662.244
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 20
         current messages hash  = CoWYth5XtxAyDDmpvvDcLY1szc9seaKip1FW4971rUkE16EaUAvH
         nb_available_messages = 171
         message_counter = 18
         old_levels_messages = 
       content = CoVrTUpJJMCKybf2XQJq6TShTZ9grEp8214ZFdcJ7BhDRmS7EJzB
       index = 18
       back_pointers = CoW7eGZpdjXdDbsK1Np5Zta4sdKLf2rUFDHorB2gBMiqq9n8Reuo
      CoW7eGZpdjXdDbsK1Np5Zta4sdKLf2rUFDHorB2gBMiqq9n8Reuo
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1662.809 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000674
    Expected counter: 20
    Gas limit: 1763
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000674
      payload fees(the block proposer) ....... +ꜩ0.000674
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1662.809
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 21
         current messages hash  = CoVooDD631U4DniRdMexS8nxVG8UfNwSMgpFzWdyG9MUsjnmWoTu
         nb_available_messages = 190
         message_counter = 19
         old_levels_messages = 
       content = CoWYth5XtxAyDDmpvvDcLY1szc9seaKip1FW4971rUkE16EaUAvH
       index = 19
       back_pointers = CoVif3e3s6pXM3mQkQCANwqjNBdDPaFhqTmZJBHZZEWS4xKvQEt4
      CoW7eGZpdjXdDbsK1Np5Zta4sdKLf2rUFDHorB2gBMiqq9n8Reuo
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1663.374 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000686
    Expected counter: 21
    Gas limit: 1764
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000686
      payload fees(the block proposer) ....... +ꜩ0.000686
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1663.374
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 22
         current messages hash  = CoV4vVmUCgzBS7gSiqLd8V4ec7y6xS3sM6nrUc7vLDmT8SBTCr4i
         nb_available_messages = 210
         message_counter = 20
         old_levels_messages = 
       content = CoVooDD631U4DniRdMexS8nxVG8UfNwSMgpFzWdyG9MUsjnmWoTu
       index = 20
       back_pointers = CoWWhYzUa9dzJYM8rkXLFQSGT9sN8pkDai6pfmkQD8UmGPnNvJfK
      CoWWhYzUa9dzJYM8rkXLFQSGT9sN8pkDai6pfmkQD8UmGPnNvJfK
      CoWWhYzUa9dzJYM8rkXLFQSGT9sN8pkDai6pfmkQD8UmGPnNvJfK
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1663.939 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000698
    Expected counter: 22
    Gas limit: 1764
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000698
      payload fees(the block proposer) ....... +ꜩ0.000698
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1663.939
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 23
         current messages hash  = CoWJdhhuq5QNTEuHufG5tro5KZ7iqf6D5NLJPVPuzzjT6S3Getgc
         nb_available_messages = 231
         message_counter = 21
         old_levels_messages = 
       content = CoV4vVmUCgzBS7gSiqLd8V4ec7y6xS3sM6nrUc7vLDmT8SBTCr4i
       index = 21
       back_pointers = CoVP4hzyrrxBfhUhfBvQnvGBJoCeXXxqHTzgHxXYMXC2SDBxa74Z
      CoWWhYzUa9dzJYM8rkXLFQSGT9sN8pkDai6pfmkQD8UmGPnNvJfK
      CoWWhYzUa9dzJYM8rkXLFQSGT9sN8pkDai6pfmkQD8UmGPnNvJfK
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1664.504 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.00071
    Expected counter: 23
    Gas limit: 1765
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.00071
      payload fees(the block proposer) ....... +ꜩ0.00071
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1664.504
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 24
         current messages hash  = CoWD1TNgtmvkWrZd12jVpYXGP8Tjz7QR4yyUm7imaPMdZtkAxM7n
         nb_available_messages = 253
         message_counter = 22
         old_levels_messages = 
       content = CoWJdhhuq5QNTEuHufG5tro5KZ7iqf6D5NLJPVPuzzjT6S3Getgc
       index = 22
       back_pointers = CoUhGbCqa1w8n5BAq9MJtLZoA33o6gv6k7AkhdrYSj3daUKtvvKN
      CoUhGbCqa1w8n5BAq9MJtLZoA33o6gv6k7AkhdrYSj3daUKtvvKN
      CoWWhYzUa9dzJYM8rkXLFQSGT9sN8pkDai6pfmkQD8UmGPnNvJfK
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1665.069 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000722
    Expected counter: 24
    Gas limit: 1766
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000722
      payload fees(the block proposer) ....... +ꜩ0.000722
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1665.069
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 25
         current messages hash  = CoUsSobxkrQQSdVB7Y9NuvfJ4umZ4J6J9mSuesg8zKpS6p44uMwm
         nb_available_messages = 276
         message_counter = 23
         old_levels_messages = 
       content = CoWD1TNgtmvkWrZd12jVpYXGP8Tjz7QR4yyUm7imaPMdZtkAxM7n
       index = 23
       back_pointers = CoV9Sd61WptAMsvBex3aAFKp4iygLb1dx4TW9KrwNSB612s6L8Bb
      CoUhGbCqa1w8n5BAq9MJtLZoA33o6gv6k7AkhdrYSj3daUKtvvKN
      CoWWhYzUa9dzJYM8rkXLFQSGT9sN8pkDai6pfmkQD8UmGPnNvJfK
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1665.634 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000734
    Expected counter: 25
    Gas limit: 1766
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000734
      payload fees(the block proposer) ....... +ꜩ0.000734
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1665.634
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 26
         current messages hash  = CoWSGuqQmiHLCwCCHyNSBVpXV3Dud2tGPziG7AAejN6oKBe3TtSs
         nb_available_messages = 300
         message_counter = 24
         old_levels_messages = 
       content = CoUsSobxkrQQSdVB7Y9NuvfJ4umZ4J6J9mSuesg8zKpS6p44uMwm
       index = 24
       back_pointers = CoUsA5Ek5CNXaXeEz9cVrZpuf9C7dnrr4C4yyvwuBnrRvt4nYxXR
      CoUsA5Ek5CNXaXeEz9cVrZpuf9C7dnrr4C4yyvwuBnrRvt4nYxXR
      CoUsA5Ek5CNXaXeEz9cVrZpuf9C7dnrr4C4yyvwuBnrRvt4nYxXR
      CoUsA5Ek5CNXaXeEz9cVrZpuf9C7dnrr4C4yyvwuBnrRvt4nYxXR
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1666.199 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000746
    Expected counter: 26
    Gas limit: 1767
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000746
      payload fees(the block proposer) ....... +ꜩ0.000746
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1666.199
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 27
         current messages hash  = CoVzzv1tbU4tqRLwuK1KLt5V5wvwUyY3ouheHiz3MgqdWpb4bwFv
         nb_available_messages = 325
         message_counter = 25
         old_levels_messages = 
       content = CoWSGuqQmiHLCwCCHyNSBVpXV3Dud2tGPziG7AAejN6oKBe3TtSs
       index = 25
       back_pointers = CoVnyRbDa9Vam1QZV1iB9V6ST3mxukgvaURLzRvqbtJHEbYioMmi
      CoUsA5Ek5CNXaXeEz9cVrZpuf9C7dnrr4C4yyvwuBnrRvt4nYxXR
      CoUsA5Ek5CNXaXeEz9cVrZpuf9C7dnrr4C4yyvwuBnrRvt4nYxXR
      CoUsA5Ek5CNXaXeEz9cVrZpuf9C7dnrr4C4yyvwuBnrRvt4nYxXR
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1666.764 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000758
    Expected counter: 27
    Gas limit: 1767
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000758
      payload fees(the block proposer) ....... +ꜩ0.000758
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1666.764
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 28
         current messages hash  = CoUymLeyxLCiwbWTsN6KYSBdHbjexSbAXChymu7kCfmxEqZfByvC
         nb_available_messages = 351
         message_counter = 26
         old_levels_messages = 
       content = CoVzzv1tbU4tqRLwuK1KLt5V5wvwUyY3ouheHiz3MgqdWpb4bwFv
       index = 26
       back_pointers = CoVq8CLSWs2fY5eDxdeQGxLyTNtsGizVfixZpQXcBXuLhTxNdNSD
      CoVq8CLSWs2fY5eDxdeQGxLyTNtsGizVfixZpQXcBXuLhTxNdNSD
      CoUsA5Ek5CNXaXeEz9cVrZpuf9C7dnrr4C4yyvwuBnrRvt4nYxXR
      CoUsA5Ek5CNXaXeEz9cVrZpuf9C7dnrr4C4yyvwuBnrRvt4nYxXR
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1667.329 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.00077
    Expected counter: 28
    Gas limit: 1768
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.00077
      payload fees(the block proposer) ....... +ꜩ0.00077
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1667.329
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 29
         current messages hash  = CoWKim4YDRvp4jxgFxJTvZztdRPqrBDuv1zHBY79Aukc7b8yx7sz
         nb_available_messages = 378
         message_counter = 27
         old_levels_messages = 
       content = CoUymLeyxLCiwbWTsN6KYSBdHbjexSbAXChymu7kCfmxEqZfByvC
       index = 27
       back_pointers = CoVCdrWVSU5LBmD9kUTBwGYvqXbVFiiMhQ9f1rmdh3tsEWBE4N32
      CoVq8CLSWs2fY5eDxdeQGxLyTNtsGizVfixZpQXcBXuLhTxNdNSD
      CoUsA5Ek5CNXaXeEz9cVrZpuf9C7dnrr4C4yyvwuBnrRvt4nYxXR
      CoUsA5Ek5CNXaXeEz9cVrZpuf9C7dnrr4C4yyvwuBnrRvt4nYxXR
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1667.894 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000782
    Expected counter: 29
    Gas limit: 1768
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000782
      payload fees(the block proposer) ....... +ꜩ0.000782
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1667.894
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 30
         current messages hash  = CoVoM7dmkxUSGDpgVoodsTjWaNNA15rdR4xNe4suhjre3innnQHx
         nb_available_messages = 406
         message_counter = 28
         old_levels_messages = 
       content = CoWKim4YDRvp4jxgFxJTvZztdRPqrBDuv1zHBY79Aukc7b8yx7sz
       index = 28
       back_pointers = CoUn1FKqsF22mJV7Fa3FEWtwotEAttyNRZHwfmx4fFy7TqEuyNN3
      CoUn1FKqsF22mJV7Fa3FEWtwotEAttyNRZHwfmx4fFy7TqEuyNN3
      CoUn1FKqsF22mJV7Fa3FEWtwotEAttyNRZHwfmx4fFy7TqEuyNN3
      CoUsA5Ek5CNXaXeEz9cVrZpuf9C7dnrr4C4yyvwuBnrRvt4nYxXR
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1668.459 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000794
    Expected counter: 30
    Gas limit: 1769
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000794
      payload fees(the block proposer) ....... +ꜩ0.000794
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1668.459
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 31
         current messages hash  = CoWGv4kud2a8r1uHEHVg2B1ZPFFbAdD2hPb1cxrymvYkVfXjfeY9
         nb_available_messages = 435
         message_counter = 29
         old_levels_messages = 
       content = CoVoM7dmkxUSGDpgVoodsTjWaNNA15rdR4xNe4suhjre3innnQHx
       index = 29
       back_pointers = CoW8q5T38pdp5iBmi2tagvQt6b2hVJpuQcD3oMF2JdTQFRPEzHgt
      CoUn1FKqsF22mJV7Fa3FEWtwotEAttyNRZHwfmx4fFy7TqEuyNN3
      CoUn1FKqsF22mJV7Fa3FEWtwotEAttyNRZHwfmx4fFy7TqEuyNN3
      CoUsA5Ek5CNXaXeEz9cVrZpuf9C7dnrr4C4yyvwuBnrRvt4nYxXR
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
    
    


./tezos-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1669.024 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000806
    Expected counter: 31
    Gas limit: 1770
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000806
      payload fees(the block proposer) ....... +ꜩ0.000806
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1669.024
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 32
         current messages hash  = CoW6QBucKL8LMzEt9Sjk7ozxvev4CaeVkipsPbbtGFkcbkMzgaZU
         nb_available_messages = 465
         message_counter = 30
         old_levels_messages = 
       content = CoWGv4kud2a8r1uHEHVg2B1ZPFFbAdD2hPb1cxrymvYkVfXjfeY9
       index = 30
       back_pointers = CoWXUFqR6NT2RmrrgnMF4weUNuFGvxvvbW9sJYcwhWavwdUKqARc
      CoWXUFqR6NT2RmrrgnMF4weUNuFGvxvvbW9sJYcwhWavwdUKqARc
      CoUn1FKqsF22mJV7Fa3FEWtwotEAttyNRZHwfmx4fFy7TqEuyNN3
      CoUsA5Ek5CNXaXeEz9cVrZpuf9C7dnrr4C4yyvwuBnrRvt4nYxXR
      CoUp3myZtWe8iG3RMHuyXEdq48ZgDUbJnq2XTVY3VmjhHDCGJ2vZ
    
    

